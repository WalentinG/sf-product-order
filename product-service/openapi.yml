openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'product-service-order-service'
paths:
  /products:
    post:
      tags:
        - products
      summary: Create a new product-service
      operationId: createProduct
      requestBody:
        description: Product to create
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - price
                - quantity
              properties:
                name:
                  type: string
                  example: Coffee Mug
                price:
                  type: number
                  format: float
                  example: 12.99
                quantity:
                  type: integer
                  format: int32
                  example: 100
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '422':
          description: Invalid input, object invalid
        '409':
          description: An existing product-service already exists
    get:
      tags:
        - products
      summary: List all products
      operationId: listProducts
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Invalid status value

  /products/{id}:
    get:
      tags:
        - products
      summary: Info for a specific product-service
      operationId: getProduct
      parameters:
        - name: id
          in: path
          description: The id of the product-service to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid ID supplied
        '404':
          description: Product not found
components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
        - price
        - quantity
      properties:
        id:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        name:
          type: string
          example: Coffee Mug
        price:
          type: number
          format: float
          example: 12.99
        quantity:
          type: integer
          format: int32
          example: 100
