openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'product-service-order-service'
paths:
  /orders:
    post:
      tags:
        - orders
      summary: Create a new order-service
      operationId: createOrder
      requestBody:
        description: Order to create
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - productId
                - customerName
                - quantityOrdered
              properties:
                productId:
                  type: string
                  format: uuid
                  example: 550e8400-e29b-41d4-a716-446655440000
                customerName:
                  type: string
                  example: John Doe
                quantityOrdered:
                  type: integer
                  format: int32
                  example: 2
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input, object invalid
        '409':
          description: An existing order-service already exists
    get:
      tags:
        - orders
      summary: List all orders
      operationId: listOrders
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: How many items to skip
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Invalid status value

  /orders/{id}:
    get:
      tags:
        - orders
      summary: Find order-service by ID
      description: Returns a single order-service
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          description: ID of order-service to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found


components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
        - price
      properties:
        id:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        name:
          type: string
          example: Coffee Mug
        price:
          type: number
          format: float
          example: 12.99
    Order:
      type: object
      required:
        - orderId
        - product
        - customerName
        - quantityOrdered
        - orderStatus
      properties:
        orderId:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        product:
          $ref: '#/components/schemas/Product'
        customerName:
          type: string
          example: John Doe
        quantityOrdered:
          type: integer
          format: int32
          example: 2
        orderStatus:
          type: string
          enum:
            - Processing
            - Completed
            - Failed
          example: Processing
